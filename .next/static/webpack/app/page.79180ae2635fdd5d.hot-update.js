"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./Utils/index.tsx":
/*!*************************!*\
  !*** ./Utils/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCarRent: function() { return /* binding */ calculateCarRent; },\n/* harmony export */   deleteSearchParams: function() { return /* binding */ deleteSearchParams; },\n/* harmony export */   fetchCars: function() { return /* binding */ fetchCars; },\n/* harmony export */   generateCarImageUrl: function() { return /* binding */ generateCarImageUrl; },\n/* harmony export */   updateSearchParams: function() { return /* binding */ updateSearchParams; }\n/* harmony export */ });\nconst calculateCarRent = (city_mpg, year)=>{\n    const basePricePerDay = 50; // Base rental price per day in dollars\n    const mileageFactor = 0.1; // Additional rate per mile driven\n    const ageFactor = 0.05; // Additional rate per year of vehicle age\n    // Calculate additional rate based on mileage and age\n    const mileageRate = city_mpg * mileageFactor;\n    const ageRate = (new Date().getFullYear() - year) * ageFactor;\n    // Calculate total rental rate per day\n    const rentalRatePerDay = basePricePerDay + mileageRate + ageRate;\n};\nconst updateSearchParams = (type, value)=>{\n    // Get the current URL search params\n    const searchParams = new URLSearchParams(window.location.search);\n    // Set the specified search parameter to the given value\n    searchParams.set(type, value);\n    // Set the specified search parameter to the given value\n    const newPathname = \"\".concat(window.location.pathname, \"?\").concat(searchParams.toString());\n    return newPathname;\n};\nconst deleteSearchParams = (type)=>{\n    // Set the specified search parameter to the given value\n    const newSearchParams = new URLSearchParams(window.location.search);\n    // Delete the specified search parameter\n    newSearchParams.delete(type.toLocaleLowerCase());\n    // Construct the updated URL pathname with the deleted search parameter\n    const newPathname = \"\".concat(window.location.pathname, \"?\").concat(newSearchParams.toString());\n    return newPathname;\n};\nasync function fetchCars(filters) {\n    const { manufacturer, year, model, limit, fuel } = filters;\n    // Set the required headers for the API request\n    const headers = {\n        \"X-RapidAPI-Key\": \"de885edc3amshc5c7a20e6c384b8p1743edjsnf1b3a2ff52f0\",\n        \"X-RapidAPI-Host\": \"cars-by-api-ninjas.p.rapidapi.com\"\n    };\n    // Set the required headers for the API request\n    const response = await fetch(\"https://cars-by-api-ninjas.p.rapidapi.com/v1/cars?make=\".concat(manufacturer, \"&year=\").concat(year, \"&model=\").concat(model, \"&limit=\").concat(limit, \"&fuel_type=\").concat(fuel), {\n        headers: headers\n    });\n    // Parse the response as JSON\n    const result = await response.json();\n    return result;\n}\nconst generateCarImageUrl = (car, angle)=>{\n    const url = new URL(\"https://cdn.imagin.studio/getimage\");\n    const { make, model, year } = car;\n    url.searchParams.append(\"customer\", \"hrjavascript-mastery\");\n    url.searchParams.append(\"make\", make);\n    url.searchParams.append(\"modelFamily\", model.split(\" \")[0]);\n    url.searchParams.append(\"zoomType\", \"fullscreen\");\n    url.searchParams.append(\"modelYear\", \"\".concat(year));\n    // url.searchParams.append('zoomLevel', zoomLevel);\n    url.searchParams.append(\"angle\", \"\".concat(angle));\n    return \"\".concat(url);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL1V0aWxzL2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVPLE1BQU1BLG1CQUFtQixDQUFDQyxVQUFrQkM7SUFDakQsTUFBTUMsa0JBQWtCLElBQUksdUNBQXVDO0lBQ25FLE1BQU1DLGdCQUFnQixLQUFLLGtDQUFrQztJQUM3RCxNQUFNQyxZQUFZLE1BQU0sMENBQTBDO0lBRWxFLHFEQUFxRDtJQUNyRCxNQUFNQyxjQUFjTCxXQUFXRztJQUMvQixNQUFNRyxVQUFVLENBQUMsSUFBSUMsT0FBT0MsV0FBVyxLQUFLUCxJQUFHLElBQUtHO0lBRXBELHNDQUFzQztJQUN0QyxNQUFNSyxtQkFBbUJQLGtCQUFrQkcsY0FBY0M7QUFFM0QsRUFBRTtBQUVLLE1BQU1JLHFCQUFxQixDQUFDQyxNQUFjQztJQUMvQyxvQ0FBb0M7SUFDcEMsTUFBTUMsZUFBZSxJQUFJQyxnQkFBZ0JDLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTTtJQUUvRCx3REFBd0Q7SUFDeERKLGFBQWFLLEdBQUcsQ0FBQ1AsTUFBTUM7SUFFdkIsd0RBQXdEO0lBQ3hELE1BQU1PLGNBQWMsR0FBK0JOLE9BQTVCRSxPQUFPQyxRQUFRLENBQUNJLFFBQVEsRUFBQyxLQUEyQixPQUF4QlAsYUFBYVEsUUFBUTtJQUV4RSxPQUFPRjtBQUNULEVBQUU7QUFFSyxNQUFNRyxxQkFBcUIsQ0FBQ1g7SUFDakMsd0RBQXdEO0lBQ3hELE1BQU1ZLGtCQUFrQixJQUFJVCxnQkFBZ0JDLE9BQU9DLFFBQVEsQ0FBQ0MsTUFBTTtJQUVsRSx3Q0FBd0M7SUFDeENNLGdCQUFnQkMsTUFBTSxDQUFDYixLQUFLYyxpQkFBaUI7SUFFN0MsdUVBQXVFO0lBQ3ZFLE1BQU1OLGNBQWMsR0FBK0JJLE9BQTVCUixPQUFPQyxRQUFRLENBQUNJLFFBQVEsRUFBQyxLQUE4QixPQUEzQkcsZ0JBQWdCRixRQUFRO0lBRTNFLE9BQU9GO0FBQ1QsRUFBRTtBQUVLLGVBQWVPLFVBQVVDLE9BQW9CO0lBQ2xELE1BQU0sRUFBRUMsWUFBWSxFQUFFM0IsSUFBSSxFQUFFNEIsS0FBSyxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHSjtJQUVuRCwrQ0FBK0M7SUFDL0MsTUFBTUssVUFBdUI7UUFDM0Isa0JBQWtCO1FBQ2xCLG1CQUFtQjtJQUNyQjtJQUVBLCtDQUErQztJQUMvQyxNQUFNQyxXQUFXLE1BQU1DLE1BQ3JCLDBEQUErRWpDLE9BQXJCMkIsY0FBYSxVQUFzQkMsT0FBZDVCLE1BQUssV0FBd0I2QixPQUFmRCxPQUFNLFdBQTRCRSxPQUFuQkQsT0FBTSxlQUFrQixPQUFMQyxPQUMvSDtRQUNFQyxTQUFTQTtJQUNYO0lBR0YsNkJBQTZCO0lBQzdCLE1BQU1HLFNBQVMsTUFBTUYsU0FBU0csSUFBSTtJQUVsQyxPQUFPRDtBQUNUO0FBRU8sTUFBTUUsc0JBQXNCLENBQUNDLEtBQWVDO0lBQ2pELE1BQU1DLE1BQU0sSUFBSUMsSUFBSTtJQUNwQixNQUFNLEVBQUVDLElBQUksRUFBRWIsS0FBSyxFQUFFNUIsSUFBSSxFQUFFLEdBQUdxQztJQUU5QkUsSUFBSTNCLFlBQVksQ0FBQzhCLE1BQU0sQ0FBQyxZQUFZO0lBQ3BDSCxJQUFJM0IsWUFBWSxDQUFDOEIsTUFBTSxDQUFDLFFBQVFEO0lBQ2hDRixJQUFJM0IsWUFBWSxDQUFDOEIsTUFBTSxDQUFDLGVBQWVkLE1BQU1lLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUMxREosSUFBSTNCLFlBQVksQ0FBQzhCLE1BQU0sQ0FBQyxZQUFZO0lBQ3BDSCxJQUFJM0IsWUFBWSxDQUFDOEIsTUFBTSxDQUFDLGFBQWEsR0FBUSxPQUFMMUM7SUFDeEMsbURBQW1EO0lBQ25EdUMsSUFBSTNCLFlBQVksQ0FBQzhCLE1BQU0sQ0FBQyxTQUFTLEdBQVMsT0FBTko7SUFFcEMsT0FBTyxHQUFPLE9BQUpDO0FBQ1osRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9VdGlscy9pbmRleC50c3g/YWUxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYXJQcm9wcywgZmlsdGVyUHJvcHMgfSBmcm9tIFwiQC90eXBlc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUNhclJlbnQgPSAoY2l0eV9tcGc6IG51bWJlciwgeWVhcjogbnVtYmVyKSA9PiB7XHJcbiAgY29uc3QgYmFzZVByaWNlUGVyRGF5ID0gNTA7IC8vIEJhc2UgcmVudGFsIHByaWNlIHBlciBkYXkgaW4gZG9sbGFyc1xyXG4gIGNvbnN0IG1pbGVhZ2VGYWN0b3IgPSAwLjE7IC8vIEFkZGl0aW9uYWwgcmF0ZSBwZXIgbWlsZSBkcml2ZW5cclxuICBjb25zdCBhZ2VGYWN0b3IgPSAwLjA1OyAvLyBBZGRpdGlvbmFsIHJhdGUgcGVyIHllYXIgb2YgdmVoaWNsZSBhZ2VcclxuXHJcbiAgLy8gQ2FsY3VsYXRlIGFkZGl0aW9uYWwgcmF0ZSBiYXNlZCBvbiBtaWxlYWdlIGFuZCBhZ2VcclxuICBjb25zdCBtaWxlYWdlUmF0ZSA9IGNpdHlfbXBnICogbWlsZWFnZUZhY3RvcjtcclxuICBjb25zdCBhZ2VSYXRlID0gKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAtIHllYXIpICogYWdlRmFjdG9yO1xyXG5cclxuICAvLyBDYWxjdWxhdGUgdG90YWwgcmVudGFsIHJhdGUgcGVyIGRheVxyXG4gIGNvbnN0IHJlbnRhbFJhdGVQZXJEYXkgPSBiYXNlUHJpY2VQZXJEYXkgKyBtaWxlYWdlUmF0ZSArIGFnZVJhdGU7XHJcblxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVwZGF0ZVNlYXJjaFBhcmFtcyA9ICh0eXBlOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpID0+IHtcclxuICAvLyBHZXQgdGhlIGN1cnJlbnQgVVJMIHNlYXJjaCBwYXJhbXNcclxuICBjb25zdCBzZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xyXG5cclxuICAvLyBTZXQgdGhlIHNwZWNpZmllZCBzZWFyY2ggcGFyYW1ldGVyIHRvIHRoZSBnaXZlbiB2YWx1ZVxyXG4gIHNlYXJjaFBhcmFtcy5zZXQodHlwZSwgdmFsdWUpO1xyXG5cclxuICAvLyBTZXQgdGhlIHNwZWNpZmllZCBzZWFyY2ggcGFyYW1ldGVyIHRvIHRoZSBnaXZlbiB2YWx1ZVxyXG4gIGNvbnN0IG5ld1BhdGhuYW1lID0gYCR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfT8ke3NlYXJjaFBhcmFtcy50b1N0cmluZygpfWA7XHJcblxyXG4gIHJldHVybiBuZXdQYXRobmFtZTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBkZWxldGVTZWFyY2hQYXJhbXMgPSAodHlwZTogc3RyaW5nKSA9PiB7XHJcbiAgLy8gU2V0IHRoZSBzcGVjaWZpZWQgc2VhcmNoIHBhcmFtZXRlciB0byB0aGUgZ2l2ZW4gdmFsdWVcclxuICBjb25zdCBuZXdTZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xyXG5cclxuICAvLyBEZWxldGUgdGhlIHNwZWNpZmllZCBzZWFyY2ggcGFyYW1ldGVyXHJcbiAgbmV3U2VhcmNoUGFyYW1zLmRlbGV0ZSh0eXBlLnRvTG9jYWxlTG93ZXJDYXNlKCkpO1xyXG5cclxuICAvLyBDb25zdHJ1Y3QgdGhlIHVwZGF0ZWQgVVJMIHBhdGhuYW1lIHdpdGggdGhlIGRlbGV0ZWQgc2VhcmNoIHBhcmFtZXRlclxyXG4gIGNvbnN0IG5ld1BhdGhuYW1lID0gYCR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfT8ke25ld1NlYXJjaFBhcmFtcy50b1N0cmluZygpfWA7XHJcblxyXG4gIHJldHVybiBuZXdQYXRobmFtZTtcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaENhcnMoZmlsdGVyczogZmlsdGVyUHJvcHMpIHtcclxuICBjb25zdCB7IG1hbnVmYWN0dXJlciwgeWVhciwgbW9kZWwsIGxpbWl0LCBmdWVsIH0gPSBmaWx0ZXJzO1xyXG5cclxuICAvLyBTZXQgdGhlIHJlcXVpcmVkIGhlYWRlcnMgZm9yIHRoZSBBUEkgcmVxdWVzdFxyXG4gIGNvbnN0IGhlYWRlcnM6IEhlYWRlcnNJbml0ID0ge1xyXG4gICAgXCJYLVJhcGlkQVBJLUtleVwiOiAnZGU4ODVlZGMzYW1zaGM1YzdhMjBlNmMzODRiOHAxNzQzZWRqc25mMWIzYTJmZjUyZjAnLFxyXG4gICAgXCJYLVJhcGlkQVBJLUhvc3RcIjogXCJjYXJzLWJ5LWFwaS1uaW5qYXMucC5yYXBpZGFwaS5jb21cIixcclxuICB9O1xyXG5cclxuICAvLyBTZXQgdGhlIHJlcXVpcmVkIGhlYWRlcnMgZm9yIHRoZSBBUEkgcmVxdWVzdFxyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXHJcbiAgICBgaHR0cHM6Ly9jYXJzLWJ5LWFwaS1uaW5qYXMucC5yYXBpZGFwaS5jb20vdjEvY2Fycz9tYWtlPSR7bWFudWZhY3R1cmVyfSZ5ZWFyPSR7eWVhcn0mbW9kZWw9JHttb2RlbH0mbGltaXQ9JHtsaW1pdH0mZnVlbF90eXBlPSR7ZnVlbH1gLFxyXG4gICAge1xyXG4gICAgICBoZWFkZXJzOiBoZWFkZXJzLFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIC8vIFBhcnNlIHRoZSByZXNwb25zZSBhcyBKU09OXHJcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVDYXJJbWFnZVVybCA9IChjYXI6IENhclByb3BzLCBhbmdsZT86IHN0cmluZykgPT4ge1xyXG4gIGNvbnN0IHVybCA9IG5ldyBVUkwoXCJodHRwczovL2Nkbi5pbWFnaW4uc3R1ZGlvL2dldGltYWdlXCIpO1xyXG4gIGNvbnN0IHsgbWFrZSwgbW9kZWwsIHllYXIgfSA9IGNhcjtcclxuXHJcbiAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ2N1c3RvbWVyJywgJ2hyamF2YXNjcmlwdC1tYXN0ZXJ5Jyk7XHJcbiAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ21ha2UnLCBtYWtlKTtcclxuICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgnbW9kZWxGYW1pbHknLCBtb2RlbC5zcGxpdChcIiBcIilbMF0pO1xyXG4gIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCd6b29tVHlwZScsICdmdWxsc2NyZWVuJyk7XHJcbiAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ21vZGVsWWVhcicsIGAke3llYXJ9YCk7XHJcbiAgLy8gdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ3pvb21MZXZlbCcsIHpvb21MZXZlbCk7XHJcbiAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoJ2FuZ2xlJywgYCR7YW5nbGV9YCk7XHJcblxyXG4gIHJldHVybiBgJHt1cmx9YDtcclxufSAiXSwibmFtZXMiOlsiY2FsY3VsYXRlQ2FyUmVudCIsImNpdHlfbXBnIiwieWVhciIsImJhc2VQcmljZVBlckRheSIsIm1pbGVhZ2VGYWN0b3IiLCJhZ2VGYWN0b3IiLCJtaWxlYWdlUmF0ZSIsImFnZVJhdGUiLCJEYXRlIiwiZ2V0RnVsbFllYXIiLCJyZW50YWxSYXRlUGVyRGF5IiwidXBkYXRlU2VhcmNoUGFyYW1zIiwidHlwZSIsInZhbHVlIiwic2VhcmNoUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwid2luZG93IiwibG9jYXRpb24iLCJzZWFyY2giLCJzZXQiLCJuZXdQYXRobmFtZSIsInBhdGhuYW1lIiwidG9TdHJpbmciLCJkZWxldGVTZWFyY2hQYXJhbXMiLCJuZXdTZWFyY2hQYXJhbXMiLCJkZWxldGUiLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsImZldGNoQ2FycyIsImZpbHRlcnMiLCJtYW51ZmFjdHVyZXIiLCJtb2RlbCIsImxpbWl0IiwiZnVlbCIsImhlYWRlcnMiLCJyZXNwb25zZSIsImZldGNoIiwicmVzdWx0IiwianNvbiIsImdlbmVyYXRlQ2FySW1hZ2VVcmwiLCJjYXIiLCJhbmdsZSIsInVybCIsIlVSTCIsIm1ha2UiLCJhcHBlbmQiLCJzcGxpdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Utils/index.tsx\n"));

/***/ })

});